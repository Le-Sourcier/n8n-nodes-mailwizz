import Request from "./Request";
import { CreateTransactionalEmailParams, CreateTransactionalEmailResponse } from "./types/TransactionEmail";
import { Config } from "./types/Config";
declare class TransactionEmail extends Request {
    /**
     * @description Creates an instance of TransactionEmail.
     * @see https://api-docs.mailwizz.com/#transactional-emails
     * @memberof TransactionEmail
     */
    constructor({ publicKey, secret, baseUrl }: Config);
    /**
     * @description Create a transactional email
     * @param {CreateTransactionalEmailParams} params - Params of the request
     * @param {string} params.toName - Name of the recipient
     * @param {string} params.toEmail - Email of the recipient
     * @param {string} params.fromName - Name of the sender
     * @param {string} params.subject - Subject of the email
     * @param {string} params.body - Body of the email
     * @param {string} params.sendAt - UTC datetime (Y-m-d H:i:s format)
     * @param {string} params.plainText - Plain text of the email
     * @param {string} params.replyToName - Reply to name
     * @param {string} params.replyToEmail - Reply to email
     * @returns {Promise<CreateTransactionalEmailResponse>} - Promise of the response
     * @memberof TransactionEmail
     * @see https://api-docs.mailwizz.com/#create-a-transactional-email
     */
    create({ toName, toEmail, fromName, subject, body, plainText, sendAt, replyToName, replyToEmail }: CreateTransactionalEmailParams): Promise<CreateTransactionalEmailResponse>;
}
export default TransactionEmail;
